1. Initialiser le dépôt Git local
Si ce n'est pas déjà fait, initialisez un nouveau dépôt Git dans votre dossier backend :

git init

2. Créer un fichier .gitignore
Ce fichier indique à Git quels fichiers et dossiers ignorer (ceux qui ne doivent pas être versionnés, comme les dépendances installées ou les variables d'environnement).

Créez un fichier nommé .gitignore à la racine de votre dossier backend et copiez-y le contenu suivant :

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
.report/

# Runtime data
pids
*.pid
*.d.ts
*.js.map
*.js

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 compilation by TypeScript
*.js.map
*.d.ts

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# next.js build output
.next/
out/

# Production build files
dist/

# temp files
tmp/

# Editor directories and files
.idea/
.vscode/
*.swp
.DS_Store
*.sublime-*
